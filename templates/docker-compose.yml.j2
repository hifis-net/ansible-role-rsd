# SPDX-FileCopyrightText: 2022 Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: 2022 Helmholtz-Zentrum Dresden-Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

# THIS DOCKER FILE REQUIRES .env FILE
version: "3.0"

services:
  database:
    container_name: database
    image: {{ rsd_container_registry_path }}/database:{{ rsd_version }}
    expose:
      - 5432
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_AUTHENTICATOR_PASSWORD
    volumes:
      # persist data in named docker volume
      # to remove use: docker-compose down --volumes
      # to inspect use: docker volume ls
      - pgdb:/var/lib/postgresql/data/
    networks:
      - net
    restart: unless-stopped

  backend:
    container_name: backend
    image: {{ rsd_container_registry_path }}/backend:{{ rsd_version }}
    expose:
      - 3500
    environment:
      # it needs to be here to use values from .env file
      - PGRST_DB_URI=postgres://authenticator:${POSTGRES_AUTHENTICATOR_PASSWORD}@database:5432/${POSTGRES_DB}
      - PGRST_DB_ANON_ROLE
      - PGRST_DB_SCHEMA
      - PGRST_SERVER_PORT
      - PGRST_JWT_SECRET
    depends_on:
      - database
    networks:
      - net
    restart: unless-stopped

  auth:
    container_name: auth
    image: {{ rsd_container_registry_path }}/auth:{{ rsd_version }}
    expose:
      - 7000
    environment:
      # it uses values from .env file
      - POSTGREST_URL
      - RSD_AUTH_PROVIDERS
      - RSD_ADMIN_EMAIL_LIST
      - RSD_AUTH_USER_MAIL_WHITELIST
      - NEXT_PUBLIC_SURFCONEXT_CLIENT_ID
      - NEXT_PUBLIC_SURFCONEXT_REDIRECT
      - NEXT_PUBLIC_SURFCONEXT_WELL_KNOWN_URL
      - NEXT_PUBLIC_SURFCONEXT_SCOPES
      - NEXT_PUBLIC_HELMHOLTZAAI_CLIENT_ID
      - NEXT_PUBLIC_HELMHOLTZAAI_REDIRECT
      - NEXT_PUBLIC_HELMHOLTZAAI_WELL_KNOWN_URL
      - NEXT_PUBLIC_HELMHOLTZAAI_SCOPES
      - HELMHOLTZAAI_ALLOW_EXTERNAL_USERS
      - AUTH_SURFCONEXT_CLIENT_SECRET
      - AUTH_SURFCONEXT_TOKEN_URL
      - AUTH_HELMHOLTZAAI_CLIENT_SECRET
      - AUTH_HELMHOLTZAAI_TOKEN_URL
      - PGRST_JWT_SECRET
    depends_on:
      - database
      - backend
    networks:
      - net
    restart: unless-stopped

  frontend:
    container_name: frontend
    image: {{ rsd_container_registry_path }}/frontend:{{ rsd_version }}
    environment:
      - POSTGREST_URL
      - PGRST_JWT_SECRET
      - RSD_AUTH_URL
      - RSD_AUTH_PROVIDERS
      - HOTJAR_ID
      - NEXT_PUBLIC_SURFCONEXT_CLIENT_ID
      - NEXT_PUBLIC_SURFCONEXT_REDIRECT
      - NEXT_PUBLIC_SURFCONEXT_WELL_KNOWN_URL
      - NEXT_PUBLIC_SURFCONEXT_SCOPES
      - NEXT_PUBLIC_SURFCONEXT_RESPONSE_MODE
      - NEXT_PUBLIC_HELMHOLTZAAI_CLIENT_ID
      - NEXT_PUBLIC_HELMHOLTZAAI_REDIRECT
      - NEXT_PUBLIC_HELMHOLTZAAI_WELL_KNOWN_URL
      - NEXT_PUBLIC_HELMHOLTZAAI_SCOPES
      - NEXT_PUBLIC_HELMHOLTZAAI_RESPONSE_MODE
    expose:
      - 3000
    depends_on:
      - database
      - backend
      - auth
    networks:
      - net
    restart: unless-stopped

  scrapers:
    container_name: scrapers
    image: {{ rsd_container_registry_path }}/scrapers:{{ rsd_version }}
    environment:
      # it uses values from .env file
      - POSTGREST_URL
      - PGRST_JWT_SECRET
      - MAX_REQUESTS_GITHUB
      - MAX_REQUESTS_GITLAB
      - API_CREDENTIALS_GITHUB
      - ZENODO_ACCESS_TOKEN
      - MAX_REQUESTS_DOI
      - CROSSREF_CONTACT_EMAIL
    depends_on:
      - database
      - backend
    networks:
      - net
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: {{ rsd_container_registry_path }}/nginx:{{ rsd_version }}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - database
      - backend
      - auth
      - frontend
    networks:
      - net
    volumes:
      - {{ (rsd_working_directory, 'nginx.conf') | path_join }}:/etc/nginx/conf.d/default.conf:ro
      - {{ rsd_tls_cert_path }}:/etc/ssl/certs/rsd.pem:ro
      - {{ rsd_tls_key_path }}:/etc/ssl/private/rsd.key:ro
      - {{ rsd_nginx_dhparam_file_path }}:/etc/ssl/dhparam.pem:ro
    restart: unless-stopped

# define name for docker network
# it should have name: rsd-as-a-service_net
networks:
  net:

# named volumes can be managed easier using docker-compose
# volume should have name rsd-as-a-service_pgdb
volumes:
  pgdb:
