# SPDX-FileCopyrightText: 2022 Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: 2022 Helmholtz-Zentrum Dresden-Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

{{ ansible_managed | comment }}

# ---- PUBLIC ENV VARIABLES -------------

# postgresql
# consumed by services: database, backend
POSTGRES_DB=rsd-db
# consumed by services: database
POSTGRES_USER=rsd

# backend (postgREST)
# consumed by services: backend
PGRST_DB_ANON_ROLE=web_anon
PGRST_DB_SCHEMA=public
PGRST_SERVER_PORT=3500

# postgREST api
# consumed by services: authentication,frontend,auth-tests, scrapers
POSTGREST_URL=http://backend:3500

# RSD Auth module
# consumed by services: frontend (api/fe)
RSD_AUTH_URL=http://auth:7000

# consumed by services: authentication, frontend (api/fe)
# provide a list of supported OpenID auth providers
# the values should be separated by semicolon (;)
# if env value is not provided default provider is set to be SURFCONEXT
# if you add the value "LOCAL", then local accounts are enables, USE THIS FOR TESTING PURPOSES ONLY
RSD_AUTH_PROVIDERS={{ rsd_auth_providers }}

{% if rsd_auth_user_mail_whitelist is defined and rsd_auth_user_mail_whitelist | length > 0 %}
# Define a semicolon-separated list of user email adresses which are allowed to
# login to the RSD. If the variable is left empty, or is not defined, all users
# will be allowed to login.
# consumed by: authentication
RSD_AUTH_USER_MAIL_WHITELIST={{ rsd_auth_user_mail_whitelist }}
{% endif %}

# SURFCONEXT - TEST ENVIRONMENT
# consumed by: authentication, frontend/utils/loginHelpers
NEXT_PUBLIC_SURFCONEXT_CLIENT_ID=www.research-software.nl
# consumed by: authentication, frontend/utils/loginHelpers
NEXT_PUBLIC_SURFCONEXT_REDIRECT=https://{{ rsd_domain }}/auth/login/surfconext
# consumed by: authentication, frontend/utils/loginHelpers
NEXT_PUBLIC_SURFCONEXT_WELL_KNOWN_URL=https://connect.test.surfconext.nl/.well-known/openid-configuration
# consumed by: authentication, frontend/utils/loginHelpers
NEXT_PUBLIC_SURFCONEXT_SCOPES=openid
# consumed by: frontend/utils/loginHelpers
NEXT_PUBLIC_SURFCONEXT_RESPONSE_MODE=form_post
# consumed by services: authentication
AUTH_SURFCONEXT_TOKEN_URL=https://connect.test.surfconext.nl/oidc/token

# Helmholtz AAI
# consumed by: authentication, frontend/utils/loginHelpers
NEXT_PUBLIC_HELMHOLTZAAI_CLIENT_ID={{ rsd_hgfaai_client_id }}
# consumed by: authentication, frontend/utils/loginHelpers
NEXT_PUBLIC_HELMHOLTZAAI_REDIRECT=https://{{ rsd_domain }}/auth/login/helmholtzaai
# consumed by: authentication, frontend/utils/loginHelpers
NEXT_PUBLIC_HELMHOLTZAAI_WELL_KNOWN_URL={{ rsd_hgfaai_well_known_url }}
# consumed by: authentication, frontend/utils/loginHelpers
NEXT_PUBLIC_HELMHOLTZAAI_SCOPES=openid+profile+email+eduperson_principal_name
# consumed by: frontend/utils/loginHelpers
NEXT_PUBLIC_HELMHOLTZAAI_RESPONSE_MODE=query
# consumed by services: authentication
AUTH_HELMHOLTZAAI_TOKEN_URL={{ rsd_hgfaai_token_url }}
{% if rsd_hgfaai_allow_external_users | bool %}
# consumed by: authentication
# uncomment if you want to allow users from non-Helmholtz centres or social IdPs:
HELMHOLTZAAI_ALLOW_EXTERNAL_USERS={{ rsd_hgfaai_allow_external_users }}
{% endif %}

# max requests to the GitHub API per run, runs 10 times per hour
# optional, comment out if not available, a default of 6 will be used
# consumed by: scrapers
MAX_REQUESTS_GITHUB=6

# max request to GitLab API per run, runs 10 times per hour
# optional, comment out if not available, a default of 6 will be used
# consumed by: scrapers
MAX_REQUESTS_GITLAB=6

# max mentions to scrape per run, runs 10 times per hour
# optional, comment out if not available, a default of 6 will be used
# consumed by: scrapers
MAX_REQUESTS_DOI=6

# ---- SECRETS ------ SECRETS -----------

# consumed by services: database
# generate random/strong password
POSTGRES_PASSWORD={{ rsd_postgres_password }}

# consumed by services: database, backend
# generate random/strong password
POSTGRES_AUTHENTICATOR_PASSWORD={{ rsd_postgres_password }}

# SURFCONEXT
# consumed by services: authentication
# obtain the secret from SURFCONEXT dashboard
AUTH_SURFCONEXT_CLIENT_SECRET={{ rsd_surfconext_client_secret }}

# Helmholtz AAI
# consumed by services: authentication
# obtain the secret from the project team
AUTH_HELMHOLTZAAI_CLIENT_SECRET={{ rsd_hgfaai_client_secret }}

# POSTGREST JWT SECRET
# consumed by services: authentication, frontend (auth-node), auth-tests, scrapers
# generate random/strong password with at least 32 characters
PGRST_JWT_SECRET={{ rsd_jwt_secret }}

# consumed by: scrapers
# optional, comment out if not available, should be of the form username:token
# obtain the secret from GITHUB dashboard
API_CREDENTIALS_GITHUB={{ rsd_gh_access_token }}

# consumed by: scrapers
# obtain the secret from ZENODO dashboard
ZENODO_ACCESS_TOKEN={{ rsd_zenodo_access_token }}

# consumed by: scrapers
# email address that Crossref can contact you with to comply with their "polite" policy
# leave blank or use a real email address that you will respond to
CROSSREF_CONTACT_EMAIL={{ rsd_crossref_contact_email }}

# consumed by: frontend
# ID for Hotjar Tracking Code (needs to be a number)
HOTJAR_ID={{ rsd_hotjar_id }}
