# SPDX-FileCopyrightText: 2022 Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: 2022 Helmholtz-Zentrum Dresden-Rossendorf (HZDR)
# SPDX-FileCopyrightText: 2022 Helmholtz Centre Potsdam - GFZ German Research Centre for Geosciences
#
# SPDX-License-Identifier: Apache-2.0

# upstream configuration
upstream backend {
    server backend:3500;
}
upstream authentication {
    server auth:7000;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{ rsd_domain }};

    ssl_certificate /etc/ssl/certs/rsd.pem;
    ssl_certificate_key /etc/ssl/private/rsd.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    ssl_dhparam /etc/ssl/dhparam.pem;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

    charset utf-8;

    # enable gzip file compression
    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;

    # auth
    location /auth/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://authentication/;
    }

    # PostgREST backend API
    # Note! NextJS has api/fe for citation files and images
    location /api/v1/ {
        # needed to increase size for the migration script
        client_max_body_size 40M;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        default_type application/json;
        proxy_hide_header Content-Location;
        add_header Content-Location  /api/$upstream_http_content_location;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_pass http://backend/;
    }

    # reverse proxy for next fontend server
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        # we need to remove this 404 handling
        # because next's _next folder has own 404 handling
        # try_files $uri $uri/ =404;
    }

    # serve postgrest images with binary header
    location /image/ {
        proxy_set_header "Authorization" "Bearer $cookie_rsd_token";
        rewrite /image/(.+) /$1 break;
        proxy_set_header Accept application/octet-stream;
        proxy_pass http://backend/;
    }

{% if rsd_oaipmh_scraper_enabled | bool %}
    location /oaipmh {
        if ($arg_verb != "ListRecords") {
            return 404;
        }
        if ($arg_metadataPrefix != "datacite4") {
            return 404;
        }
        set $args "";
        proxy_set_header Accept text/xml;
        proxy_pass http://backend/oaipmh?select=data;
    }
{% endif %}

{% if rsd_swagger_enabled | bool %}
    # Provide user interface for API access
    location /swagger/ {
        proxy_pass http://swagger:8080/;
    }
{% endif %}
}
