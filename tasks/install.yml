# SPDX-FileCopyrightText: 2022 Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: 2022 Helmholtz-Zentrum Dresden-Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

---
- name: "Create RSD working directory"
  ansible.builtin.file:
    path: "{{ rsd_working_directory }}"
    owner: "root"
    group: "root"
    state: "directory"
    mode: "0750"

- name: "Copy environment file"
  ansible.builtin.template:
    src: "{{ rsd_environment_file }}"
    dest: "{{ (rsd_working_directory, 'rsd-secrets.env') | path_join }}"
    owner: "root"
    group: "root"
    mode: "0600"
  no_log: True

- name: "Copy docker-compose.yml"
  ansible.builtin.template:
    src: "{{ rsd_docker_compose_template_file }}"
    dest: "{{ (rsd_working_directory, 'docker-compose.yml') | path_join }}"
    owner: "root"
    group: "root"
    mode: "0640"
    validate: "docker-compose -f %s config -q"

- name: "Copy nginx configuration file"
  ansible.builtin.template:
    src: "{{ rsd_nginx_config_template }}"
    dest: "{{ (rsd_working_directory, 'nginx.conf') | path_join }}"
    owner: "root"
    group: "root"
    mode: "0640"

- name: "Copy TLS files"
  ansible.builtin.copy:
    src: "{{ item.file }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "{{ item.mode }}"
  loop:
    - { file: "{{ rsd_tls_cert_file }}", dest: "{{ rsd_tls_cert_path }}", mode: "0644" }
    - { file: "{{ rsd_tls_key_file }}", dest: "{{ rsd_tls_key_path }}", mode: "0600" }
    - { file: "{{ rsd_nginx_dhparam_file }}", dest: "{{ rsd_nginx_dhparam_file_path }}", mode: "0600" }
  no_log: True
  when: "rsd_handle_tls_files | default('true') | bool"

- name: "Create environment file symlink"
  ansible.builtin.file:
    src: "{{ (rsd_working_directory, 'rsd-secrets.env') | path_join }}"
    dest: "{{ (rsd_working_directory, '.env') | path_join }}"
    owner: "root"
    group: "root"
    state: "link"
  when: "not is_initial_dryrun"

- name: "Start RSD-as-a-service"
  tags: "molecule-notest"
  when: "not is_initial_dryrun"
  block:

    - name: "Start all containers"
      community.docker.docker_compose:
        project_name: "rsd"
        project_src: "{{ rsd_working_directory }}"
        state: "present"
        debug: "yes"

  rescue:
    - name: "Remove containers and volumes"
      community.docker.docker_compose:
        project_name: "rsd"
        project_src: "{{ rsd_working_directory }}"
        state: "absent"
        remove_volumes: "yes"

    - name: "Restart all containers"
      community.docker.docker_compose:
        project_name: "rsd"
        project_src: "{{ rsd_working_directory }}"
        state: "present"

...
